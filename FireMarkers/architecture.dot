digraph FireMarkersArchitecture {
    bgcolor="#fafafa"
    node [shape=box, style="rounded,filled", fontname="Arial", fontsize=10];
    edge [fontname="Arial", fontsize=9];

    // Define clusters for grouping
    subgraph cluster_firebase {
        label="Firebase Cloud";
        style="filled";
        color="#FFEBEE";
        DB [label="Firebase Realtime Database
/markers", fillcolor="#FFCDD2"];
    }

    subgraph cluster_android_app {
        label="Android App";
        style="filled";
        color="#E3F2FD";

        subgraph cluster_ui_layer {
            label="UI Layer (View)";
            style="filled";
            color="#BBDEFB";
            MainActivity [label="MainActivity"];
            MapScreen [label="MapScreen Composable"];
            TopAppBar [label="TopAppBar Actions
(Cycle, Seed, Clear)", shape=diamond];
            GoogleMap [label="GoogleMap Composable"];
        }

        subgraph cluster_viewmodel_layer {
            label="State & Logic Layer (ViewModel)";
            style="filled";
            color="#C5E1A5";
            MarkersViewModel [label="MarkersViewModel"];
        }

        subgraph cluster_data_layer {
            label="Data Layer";
            style="filled";
            color="#FFF9C4";
            FirebaseConnection [label="FirebaseConnection"];
            MarkerData [label="MarkerData Model", shape=ellipse];
        }

        subgraph cluster_di_layer {
            label="Dependency Injection";
            style="filled";
            color="#F5F5F5";
            Hilt [label="Hilt/Dagger"];
        }
    }

    // --- Define Relationships ---

    // UI Flow
    MainActivity -> MapScreen;
    MapScreen -> TopAppBar [label=" exposes controls"];
    MapScreen -> GoogleMap [label=" contains"];

    // User Interaction
    TopAppBar -> MarkersViewModel [label=" calls function"];

    // ViewModel to Data Layer
    MarkersViewModel -> FirebaseConnection [label=" uses"];
    MarkersViewModel -> MarkerData [label=" uses model", style=dashed];


    // Data Layer to Firebase
    FirebaseConnection -> DB [label=" reads/writes to"];
    DB -> FirebaseConnection [label=" real-time updates", style=dashed, color=blue];

    // Data Flow back to UI
    FirebaseConnection -> MarkersViewModel [style=dashed, color=blue];
    MarkersViewModel -> MapScreen [label=" updates StateFlow", style=dashed, color=blue];


    // Dependency Injection
    Hilt -> FirebaseConnection [label=" injects", style=dotted, arrowhead=empty];
    Hilt -> MarkersViewModel [label=" injects", style=dotted, arrowhead=empty];
}
